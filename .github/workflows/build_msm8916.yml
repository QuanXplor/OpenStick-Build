name: Build_msm8916

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
    # - name: Free Disk Space
    #   uses: jlumbroso/free-disk-space@main
    #   with:
    #     # this might remove tools that are actually needed,
    #     # if set to "true" but frees about 6 GB
    #     tool-cache: true
    #     # all of these default to true, but feel free to set to
    #     # "false" if necessary for your workflow
    #     android: true
    #     dotnet: true
    #     haskell: true
    #     large-packages: true
    #     swap-storage: true

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt update 
        sudo -E apt install -y git \
        build-essential \
        gcc-aarch64-linux-gnu \
        bc bison cpio flex rsync kmod libssl-dev libncurses-dev


    - name: Clone source code
      env: 
        REPO_URL: https://github.com/OpenStick/linux.git
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH linux-openstick
        cd linux-openstick

    - name: Configuration Customization - Build_msm8916
      env:
        CONFIG_FILE: 'msm8916.config'
        ARCH: arm64
        CROSS_COMPILE: aarch64-linux-gnu-
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE linux-openstick/arch/arm64/configs/msm8916_defconfig
        cd linux-openstick && make msm8916_defconfig

    - name: Build firmware
      env: 
        ARCH: arm64
        CROSS_COMPILE: aarch64-linux-gnu-
      working-directory: ./linux-openstick
      run: |
        echo -e "$(nproc) thread build."
        make deb-pkg -j$(nproc)

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenStick
        path: ./*.deb


    - name: Archive target and upload wss
      id: upload
      env:
        OUTPUT_NAME: OpenStick.zip
      run: |
        zip --password ${{ secrets.ZIP_PASSWORD }}  $OUTPUT_NAME ./*.deb
        curl -fsSL git.io/file-transfer | sh
        ./transfer wss $OUTPUT_NAME
